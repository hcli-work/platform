require 'jwt'

puts "starting"

example_header = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjIwMjAtMDItMDFUMDA6MDA6MDFaIn0'
example_payload = 'eyJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9tZXNzYWdlX3R5cGUiOiJMdGlSZXNvdXJjZUxpbmtSZXF1ZXN0IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vdmVyc2lvbiI6IjEuMy4wIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vcmVzb3VyY2VfbGluayI6eyJpZCI6IjU0MjA0YTQ0YTBlMzBjNTc3OGI0MzBkNzM2ZmQxMzg3ODY5NDliZGQiLCJkZXNjcmlwdGlvbiI6bnVsbCwidGl0bGUiOm51bGwsInZhbGlkYXRpb25fY29udGV4dCI6bnVsbCwiZXJyb3JzIjp7ImVycm9ycyI6e319fSwiYXVkIjoiMTYwMDUwMDAwMDAwMDAwMDExIiwiYXpwIjoiMTYwMDUwMDAwMDAwMDAwMDExIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vZGVwbG95bWVudF9pZCI6IjUxOjU0MjA0YTQ0YTBlMzBjNTc3OGI0MzBkNzM2ZmQxMzg3ODY5NDliZGQiLCJleHAiOjE1ODQ0NzI1OTQsImlhdCI6MTU4NDQ2ODk5NCwiaXNzIjoiaHR0cHM6Ly9jYW52YXMuaW5zdHJ1Y3R1cmUuY29tIiwibm9uY2UiOiI5ODc2NTQzMjEiLCJzdWIiOiJkZWM4MDJkMi1jZTc4LTQ2ZmYtOTQwMC04NDdmMGE0ODk5NzYiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS90YXJnZXRfbGlua191cmkiOiJodHRwczovL3BsYXRmb3Jtd2ViL2x0aV9hY2NvdW50X25hdmlnYXRpb24iLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9jb250ZXh0Ijp7ImlkIjoiNTQyMDRhNDRhMGUzMGM1Nzc4YjQzMGQ3MzZmZDEzODc4Njk0OWJkZCIsInRpdGxlIjoiQnJhdmVuLSBDbG91ZCIsInR5cGUiOlsiQWNjb3VudCJdLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL3Rvb2xfcGxhdGZvcm0iOnsiZ3VpZCI6ImJMUUQycjg1VGYyeUhiVHlZUno3aDhOWDVmamp6SjdMQml6eU13bzA6Y2FudmFzLWxtcyIsIm5hbWUiOiJCcmF2ZW4tIENsb3VkIiwidmVyc2lvbiI6ImNsb3VkIiwicHJvZHVjdF9mYW1pbHlfY29kZSI6ImNhbnZhcyIsInZhbGlkYXRpb25fY29udGV4dCI6bnVsbCwiZXJyb3JzIjp7ImVycm9ycyI6e319fSwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vbGF1bmNoX3ByZXNlbnRhdGlvbiI6eyJkb2N1bWVudF90YXJnZXQiOiJpZnJhbWUiLCJoZWlnaHQiOjc1MCwid2lkdGgiOjc1MCwicmV0dXJuX3VybCI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9hY2NvdW50cy8xL2V4dGVybmFsX2NvbnRlbnQvc3VjY2Vzcy9leHRlcm5hbF90b29sX3JlZGlyZWN0IiwibG9jYWxlIjoiZW4iLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImxvY2FsZSI6ImVuIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vcm9sZXMiOlsiaHR0cDovL3B1cmwuaW1zZ2xvYmFsLm9yZy92b2NhYi9saXMvdjIvaW5zdGl0dXRpb24vcGVyc29uI0FkbWluaXN0cmF0b3IiLCJodHRwOi8vcHVybC5pbXNnbG9iYWwub3JnL3ZvY2FiL2xpcy92Mi9pbnN0aXR1dGlvbi9wZXJzb24jSW5zdHJ1Y3RvciIsImh0dHA6Ly9wdXJsLmltc2dsb2JhbC5vcmcvdm9jYWIvbGlzL3YyL3N5c3RlbS9wZXJzb24jVXNlciJdLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9jdXN0b20iOnsic29tZV9jdXN0b21fZmllbGQiOiJzb21lX3ZhbHVlIn0sImVycm9ycyI6eyJlcnJvcnMiOnt9fX0'
example_signature = 'JJi2lgIVSXUhzoTSuPYhu9mCoXD-1cK-xMag2uMtKB6oEyChWUyxuoy5ZPl2NArGYoVd0zvSxuF8Yf61iZilZSntHySnS8-YqznNl96O0a-lMVbzSR_u2J19-g0pSgsPfNsog35YzXZQb1sNLzG7tNuf7PaKV-YRWP8OQfzjD7atB8FlG4NTGNfL8xuAmU9u424HGUdhwLRp3sJ2wdmnj0VLG_0OFSrQlyr_7P-06LPa0EnlVqNacMlmM1Y2ReF_bD_H7j13BkCY4uK60qJq0bZtwEMU4q6xGR5GRYOo8g_WSWxr5IcRA8jdvZR5Xolx5LTY6hi1cq4UMDW3qO6d1Q'

puts "decoding this header: #{example_header}"
decoded_header = JWT::Base64.url_decode(example_header)
puts "decoded as: #{decoded_header}"
puts 'decoding a payload'
decoded_payload = JWT::Base64.url_decode(example_payload)
puts "decoded payload as: #{decoded_payload}"

decoded_signature = JWT::Base64.url_decode(example_signature)
puts "decoded signature as: #{decoded_signature}"

jwk_json = {
    "e": "AQAB",
    "n": "wj4fIwqtliabmKsM5365Cutdb9i_uieq1064Plz2cKFUx8q1ouSvzr9okGLT_-dltj-Sxdl-yqQkJuXquDRyRkqRVq-AMVA4UJZqAZQUc0hVmCdx8dh4GE4HeVbuoRP7RoYGbWDkNsyuGkWq8RcSmsqfD-xMXWzzK80UabHfs6GqMozz-RnwvBf7_uaZ_ykK7k3E2OG1P4kfcKjcfI6uvdDZY54er-99HXA4ltRkav-ItFsHnW2zD7_SnZcQ0gnPBYEErtkY4HZwOXgLeW58tw6v3r_yLGZOob6L_yDpbt75OvXSA_Em-U25M5EWI4pMrL5fJncnPq_Sqy2UJOctl5rwN03kj77uaxVH2nZL8gqnlkQjUvLLRAANJD58kADq1hr2b5B_Za_aJhzYD2PIzYAvN5MUgHeEkgCxmW8xr2X9mOffbWSbK-10-Tv1gdjwZTJJh7ZffvRrmRODsXunOAhNO1s0McsOfS5W5e-qt6HIeZkD8Q3tlBJLYhYodVZUh1-eQOwaVjAVAyRxUO9H5m4dlnq0rIsMFLsFJYXpkilEradxE05K9ZRMYNbbVFwwG4x0BvlEn_lI6JBcJo39s4RgKzA_cssfxtmOswhehhck-3RZCvstTKv0waxdI3XUius3TAaWtV0tTu7Hj7YwVk7yHUKALUw3TAtkk4HXTMU",
    "alg": "RS256",
    "kid": "S5vqaBJoOB9nLSjxsvvfyGsHJw-uiulCJf1HY_28sk4",
    "kty": "RSA",
    "use": "sig"
}

jwk = JWT::JWK.create_from jwk_json
#jwk = JWT::JWK.new(OpenSSL::PKey::RSA.new(2048))
puts "jwk = #{jwk.inspect}"
payload, headers = { data: 'data' }, { kid: jwk.kid }
puts "payload = #{payload.inspect}"
puts "headers = #{headers.inspect}"

#id_token = JWT.encode(payload, jwk.keypair, 'RS256', headers)
id_token='eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjIwMjAtMDItMDFUMDA6MDA6MDFaIn0.eyJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9tZXNzYWdlX3R5cGUiOiJMdGlSZXNvdXJjZUxpbmtSZXF1ZXN0IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vdmVyc2lvbiI6IjEuMy4wIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vcmVzb3VyY2VfbGluayI6eyJpZCI6IjljYTQ3Yzc5LWQ2MWEtNDNmZC05MDFmLTlhYzdjYWIyOGZjNCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjcFx1MDAzZUdvaW5nIHRvIHRyeSBhbmQgY3JlYXRlIGFuIEV4dGVybmFsIFN1Ym1pc3Npb25cdTAwM2MvcFx1MDAzZSIsInRpdGxlIjoiU2FtcGxlIEFzc2lnbm1lbnQiLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpLWFncy9jbGFpbS9lbmRwb2ludCI6eyJzY29wZSI6WyJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS1hZ3Mvc2NvcGUvbGluZWl0ZW0iLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS1hZ3Mvc2NvcGUvbGluZWl0ZW0ucmVhZG9ubHkiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS1hZ3Mvc2NvcGUvcmVzdWx0LnJlYWRvbmx5IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGktYWdzL3Njb3BlL3Njb3JlIl0sImxpbmVpdGVtcyI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9hcGkvbHRpL2NvdXJzZXMvMzQvbGluZV9pdGVtcyIsImxpbmVpdGVtIjoiaHR0cHM6Ly9icmF2ZW4uaW5zdHJ1Y3R1cmUuY29tL2FwaS9sdGkvY291cnNlcy8zNC9saW5lX2l0ZW1zLzEiLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImF1ZCI6IjE2MDA1MDAwMDAwMDAwMDAxMSIsImF6cCI6IjE2MDA1MDAwMDAwMDAwMDAxMSIsImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL2RlcGxveW1lbnRfaWQiOiI1MTo1NDIwNGE0NGEwZTMwYzU3NzhiNDMwZDczNmZkMTM4Nzg2OTQ5YmRkIiwiZXhwIjoxNTg0MTE1NzE4LCJpYXQiOjE1ODQxMTIxMTgsImlzcyI6Imh0dHBzOi8vY2FudmFzLmluc3RydWN0dXJlLmNvbSIsIm5vbmNlIjoiOTg3NjU0MzIxIiwic3ViIjoiZGVjODAyZDItY2U3OC00NmZmLTk0MDAtODQ3ZjBhNDg5OTc2IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vdGFyZ2V0X2xpbmtfdXJpIjoiaHR0cHM6Ly9wbGF0Zm9ybXdlYi9sdGkvYXNzaWdubWVudCIsImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL2NvbnRleHQiOnsiaWQiOiJiYjEzOWM4MjRlZTk0ZGViMGY2MzM0MDBiNmQwNzMyM2Y2MTM3N2RkIiwibGFiZWwiOiJMVEkiLCJ0aXRsZSI6IkxUSSBFeHRlbnNpb24gUG9DIiwidHlwZSI6WyJodHRwOi8vcHVybC5pbXNnbG9iYWwub3JnL3ZvY2FiL2xpcy92Mi9jb3Vyc2UjQ291cnNlT2ZmZXJpbmciXSwidmFsaWRhdGlvbl9jb250ZXh0IjpudWxsLCJlcnJvcnMiOnsiZXJyb3JzIjp7fX19LCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS90b29sX3BsYXRmb3JtIjp7Imd1aWQiOiJiTFFEMnI4NVRmMnlIYlR5WVJ6N2g4Tlg1Zmpqeko3TEJpenlNd28wOmNhbnZhcy1sbXMiLCJuYW1lIjoiQnJhdmVuLSBDbG91ZCIsInZlcnNpb24iOiJjbG91ZCIsInByb2R1Y3RfZmFtaWx5X2NvZGUiOiJjYW52YXMiLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL2xhdW5jaF9wcmVzZW50YXRpb24iOnsiZG9jdW1lbnRfdGFyZ2V0IjoiaWZyYW1lIiwiaGVpZ2h0IjpudWxsLCJ3aWR0aCI6bnVsbCwicmV0dXJuX3VybCI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9jb3Vyc2VzLzM0L2V4dGVybmFsX2NvbnRlbnQvc3VjY2Vzcy9leHRlcm5hbF90b29sX3JlZGlyZWN0IiwibG9jYWxlIjoiZW4iLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImxvY2FsZSI6ImVuIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vcm9sZXMiOlsiaHR0cDovL3B1cmwuaW1zZ2xvYmFsLm9yZy92b2NhYi9saXMvdjIvaW5zdGl0dXRpb24vcGVyc29uI0FkbWluaXN0cmF0b3IiLCJodHRwOi8vcHVybC5pbXNnbG9iYWwub3JnL3ZvY2FiL2xpcy92Mi9pbnN0aXR1dGlvbi9wZXJzb24jSW5zdHJ1Y3RvciIsImh0dHA6Ly9wdXJsLmltc2dsb2JhbC5vcmcvdm9jYWIvbGlzL3YyL21lbWJlcnNoaXAjSW5zdHJ1Y3RvciIsImh0dHA6Ly9wdXJsLmltc2dsb2JhbC5vcmcvdm9jYWIvbGlzL3YyL3N5c3RlbS9wZXJzb24jVXNlciJdLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9jdXN0b20iOnsic29tZV9jdXN0b21fZmllbGQiOiJzb21lX3ZhbHVlIn0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpLW5ycHMvY2xhaW0vbmFtZXNyb2xlc2VydmljZSI6eyJjb250ZXh0X21lbWJlcnNoaXBzX3VybCI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9hcGkvbHRpL2NvdXJzZXMvMzQvbmFtZXNfYW5kX3JvbGVzIiwic2VydmljZV92ZXJzaW9ucyI6WyIyLjAiXSwidmFsaWRhdGlvbl9jb250ZXh0IjpudWxsLCJlcnJvcnMiOnsiZXJyb3JzIjp7fX19LCJlcnJvcnMiOnsiZXJyb3JzIjp7fX19.hmJBNvDY8VT5OF4u-pEs8gNgvwX6QeMmy1IhVn1wLHU3ukI7gnr7PomklfmW7aKrE4zimwPvkrsSCBwxvTZgq7vHGhTMMQqiUztJaGVDq_bBYD9luL2ttf7rVF_GYZvH8S2Jc-O2N81cGHtWhCOFyAjyu24wVnRgxQuC28H6Q0uJFbaHx7UoF5zJsEB5FD0B03FDUeRJXQl-gPpNZwTcl8DeJ764oac35V3ZdYIObz9vAYDYCjcVMDC6HaWDr-UTQy2G5I5L6KaiEW5Q_hgeITYJhztiEwtriY1Z0epHfwg4mExjSBdZq6MP2fDMHf9l3ykgpXDbCF5QqnQhsAJzPg'
puts "id_token = #{id_token}"

# The jwk loader would fetch the set of JWKs from a trusted source
jwk_loader = ->(options) do
  @cached_keys = nil if options[:invalidate] # need to reload the keys
  @cached_keys ||= { keys: [jwk.export] }
end

puts "jwk_loader = #{jwk_loader.inspect}"
begin
  result = JWT.decode(id_token, nil, true, { algorithms: ['RS256'], jwks: jwk_loader})
  puts "result = #{result}"
rescue JWT::JWKError => e
  # Handle problems with the provided JWKs
  puts "error: #{e}"
rescue JWT::DecodeError => e
  # Handle other decode related issues e.g. no kid in header, no matching public key found etc. 
  puts "error: #{e}"
end


# Example id_token we need to decode:
#eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjIwMjAtMDItMDFUMDA6MDA6MDFaIn0.eyJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9tZXNzYWdlX3R5cGUiOiJMdGlSZXNvdXJjZUxpbmtSZXF1ZXN0IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vdmVyc2lvbiI6IjEuMy4wIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vcmVzb3VyY2VfbGluayI6eyJpZCI6IjljYTQ3Yzc5LWQ2MWEtNDNmZC05MDFmLTlhYzdjYWIyOGZjNCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjcFx1MDAzZUdvaW5nIHRvIHRyeSBhbmQgY3JlYXRlIGFuIEV4dGVybmFsIFN1Ym1pc3Npb25cdTAwM2MvcFx1MDAzZSIsInRpdGxlIjoiU2FtcGxlIEFzc2lnbm1lbnQiLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpLWFncy9jbGFpbS9lbmRwb2ludCI6eyJzY29wZSI6WyJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS1hZ3Mvc2NvcGUvbGluZWl0ZW0iLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS1hZ3Mvc2NvcGUvbGluZWl0ZW0ucmVhZG9ubHkiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS1hZ3Mvc2NvcGUvcmVzdWx0LnJlYWRvbmx5IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGktYWdzL3Njb3BlL3Njb3JlIl0sImxpbmVpdGVtcyI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9hcGkvbHRpL2NvdXJzZXMvMzQvbGluZV9pdGVtcyIsImxpbmVpdGVtIjoiaHR0cHM6Ly9icmF2ZW4uaW5zdHJ1Y3R1cmUuY29tL2FwaS9sdGkvY291cnNlcy8zNC9saW5lX2l0ZW1zLzEiLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImF1ZCI6IjE2MDA1MDAwMDAwMDAwMDAxMSIsImF6cCI6IjE2MDA1MDAwMDAwMDAwMDAxMSIsImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL2RlcGxveW1lbnRfaWQiOiI1MTo1NDIwNGE0NGEwZTMwYzU3NzhiNDMwZDczNmZkMTM4Nzg2OTQ5YmRkIiwiZXhwIjoxNTg0MTE1NzE4LCJpYXQiOjE1ODQxMTIxMTgsImlzcyI6Imh0dHBzOi8vY2FudmFzLmluc3RydWN0dXJlLmNvbSIsIm5vbmNlIjoiOTg3NjU0MzIxIiwic3ViIjoiZGVjODAyZDItY2U3OC00NmZmLTk0MDAtODQ3ZjBhNDg5OTc2IiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vdGFyZ2V0X2xpbmtfdXJpIjoiaHR0cHM6Ly9wbGF0Zm9ybXdlYi9sdGkvYXNzaWdubWVudCIsImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL2NvbnRleHQiOnsiaWQiOiJiYjEzOWM4MjRlZTk0ZGViMGY2MzM0MDBiNmQwNzMyM2Y2MTM3N2RkIiwibGFiZWwiOiJMVEkiLCJ0aXRsZSI6IkxUSSBFeHRlbnNpb24gUG9DIiwidHlwZSI6WyJodHRwOi8vcHVybC5pbXNnbG9iYWwub3JnL3ZvY2FiL2xpcy92Mi9jb3Vyc2UjQ291cnNlT2ZmZXJpbmciXSwidmFsaWRhdGlvbl9jb250ZXh0IjpudWxsLCJlcnJvcnMiOnsiZXJyb3JzIjp7fX19LCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS90b29sX3BsYXRmb3JtIjp7Imd1aWQiOiJiTFFEMnI4NVRmMnlIYlR5WVJ6N2g4Tlg1Zmpqeko3TEJpenlNd28wOmNhbnZhcy1sbXMiLCJuYW1lIjoiQnJhdmVuLSBDbG91ZCIsInZlcnNpb24iOiJjbG91ZCIsInByb2R1Y3RfZmFtaWx5X2NvZGUiOiJjYW52YXMiLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpL2NsYWltL2xhdW5jaF9wcmVzZW50YXRpb24iOnsiZG9jdW1lbnRfdGFyZ2V0IjoiaWZyYW1lIiwiaGVpZ2h0IjpudWxsLCJ3aWR0aCI6bnVsbCwicmV0dXJuX3VybCI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9jb3Vyc2VzLzM0L2V4dGVybmFsX2NvbnRlbnQvc3VjY2Vzcy9leHRlcm5hbF90b29sX3JlZGlyZWN0IiwibG9jYWxlIjoiZW4iLCJ2YWxpZGF0aW9uX2NvbnRleHQiOm51bGwsImVycm9ycyI6eyJlcnJvcnMiOnt9fX0sImxvY2FsZSI6ImVuIiwiaHR0cHM6Ly9wdXJsLmltc2dsb2JhbC5vcmcvc3BlYy9sdGkvY2xhaW0vcm9sZXMiOlsiaHR0cDovL3B1cmwuaW1zZ2xvYmFsLm9yZy92b2NhYi9saXMvdjIvaW5zdGl0dXRpb24vcGVyc29uI0FkbWluaXN0cmF0b3IiLCJodHRwOi8vcHVybC5pbXNnbG9iYWwub3JnL3ZvY2FiL2xpcy92Mi9pbnN0aXR1dGlvbi9wZXJzb24jSW5zdHJ1Y3RvciIsImh0dHA6Ly9wdXJsLmltc2dsb2JhbC5vcmcvdm9jYWIvbGlzL3YyL21lbWJlcnNoaXAjSW5zdHJ1Y3RvciIsImh0dHA6Ly9wdXJsLmltc2dsb2JhbC5vcmcvdm9jYWIvbGlzL3YyL3N5c3RlbS9wZXJzb24jVXNlciJdLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9jdXN0b20iOnsic29tZV9jdXN0b21fZmllbGQiOiJzb21lX3ZhbHVlIn0sImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvbHRpLW5ycHMvY2xhaW0vbmFtZXNyb2xlc2VydmljZSI6eyJjb250ZXh0X21lbWJlcnNoaXBzX3VybCI6Imh0dHBzOi8vYnJhdmVuLmluc3RydWN0dXJlLmNvbS9hcGkvbHRpL2NvdXJzZXMvMzQvbmFtZXNfYW5kX3JvbGVzIiwic2VydmljZV92ZXJzaW9ucyI6WyIyLjAiXSwidmFsaWRhdGlvbl9jb250ZXh0IjpudWxsLCJlcnJvcnMiOnsiZXJyb3JzIjp7fX19LCJlcnJvcnMiOnsiZXJyb3JzIjp7fX19.hmJBNvDY8VT5OF4u-pEs8gNgvwX6QeMmy1IhVn1wLHU3ukI7gnr7PomklfmW7aKrE4zimwPvkrsSCBwxvTZgq7vHGhTMMQqiUztJaGVDq_bBYD9luL2ttf7rVF_GYZvH8S2Jc-O2N81cGHtWhCOFyAjyu24wVnRgxQuC28H6Q0uJFbaHx7UoF5zJsEB5FD0B03FDUeRJXQl-gPpNZwTcl8DeJ764oac35V3ZdYIObz9vAYDYCjcVMDC6HaWDr-UTQy2G5I5L6KaiEW5Q_hgeITYJhztiEwtriY1Z0epHfwg4mExjSBdZq6MP2fDMHf9l3ykgpXDbCF5QqnQhsAJzPg
